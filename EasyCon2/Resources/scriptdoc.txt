所有代码不区分大小写，支持前置后置空格，支持行内注释。

【注释】
语法：# 注释内容
（多写注释是个好习惯，尤其是分享脚本给别人的时候）

【输出】
语法：PRINT 输出内容
（联机模式专用，在控制台显示文字）

【消息推送】
语法：ALERT 输出内容
（联机模式专用，发送推送消息，基于推送加服务）
注意！需要先关注<pushplus推送加>小程序生成token
取得token后请在设置->推送设置页面配置，否则无法使用

【按键】
语法：键位 [持续时间(ms)|DOWN|UP]
（键位可以取A、B、X、Y、L、R、ZL、ZR、MINUS(-)、PLUS(+)、LCLICK(按左摇杆)、RCLICK(按右摇杆)、HOME(返回系统)、CAPTURE(截屏)、LEFT、RIGHT、UP、DOWN；持续时间省略则为默认50ms）
示例：A（按下A键50毫秒）
示例：HOME 1000（按下Home键1秒）
示例：LEFT DOWN（按住左十字键，需要手动用LEFT UP松开）

【摇杆】
语法：LS|RS 方向|角度 [, 持续时间(ms)]
语法：LS|RS RESET
语法：LSS|RSS 方向(1.45新增慢推语法，仅支持方向，不支持角度)
（LS左摇杆，RS右摇杆；方向可取UP、DOWN、LEFT、RIGHT；角度可取0~360，以右侧为0度，逆时针旋转；持续时间省略则一直保持，直到用RESET恢复原位）
示例：RS UP,50（右摇杆上推50毫秒）
示例：RS DOWN,2000（右摇杆下推2秒）
示例：LS 135（左摇杆左上方向，保持不动）
示例：LS RESET（左摇杆恢复原位）
示例：LSS UP（左摇杆向上慢推，即推一半）

【等待】
语法：[WAIT] 等待时间(ms)
示例：WAIT 500
示例：2000

【循环】
语法：
FOR [循环次数]
...
NEXT
（省略循环次数则无限循环）

---------------- 进阶用法 ----------------

注意，变量运算容易消耗多条指令，可能导致程序过大无法烧录，请节约使用。

【常量】
语法：常量名 = 值
（常量名必须以下划线“_”开头，可包含英文、数字或汉字，中间不能有空格，且名称本身区分大小写；值必须是非负整数；常量一旦定义就不能修改，可用来替换代码中任何数值）
示例：
_孵蛋个数 = 150
FOR _孵蛋个数
...
NEXT

【变量】
变量名语法：$索引
32位变量名语法：$$索引
（变量不支持自定义命名，只能使用数字编号；变量名必须以“$”开头，后加索引，取值0~7；其中$0常驻为0，无法修改，$7用于存储计算中间值，尽量避免使用；变量取值范围为-32768至+32767）
（1.12新增32位变量支持，但实际是使用相邻的两个16位变量，例如$$1相当于使用$1和$2，因而推荐仅使用$$1、$$3、$$5，并且使用$$1的时候就不要使用$1和$2，其它同理；32位变量取值范围为-2147483648至+2147483647）
（1.45提高变量索引上限0~63，仅限联机模式可用）
（32位变量暂时只有联机模式可用）

【赋值】
语法：目标变量 = 值
语法：目标变量 = 来源变量

【含变量的基础语句】
输出：PRINT 用&分隔的输出内容
（输出内容可以是多段，用&分隔；每段内容如果是变量和常量会取其值，否则会按原样输出，留空会输出一个空格；如果最后一段内容为“\”则不换行，下一个Print会继续在本行输出）
按键：键位 变量名
（变量值作为持续时间，值<=0则不按键）
摇杆：LS|RS 方向|角度 变量名
（变量值作为持续时间，值<=0则不按键）
等待：WAIT 变量名
（变量值作为等待时间，值<=0则不等待）

【含变量的循环】
语法：FOR 变量名
（变量值作为循环次数，值<=0则直接跳过循环；循环开始后修改变量的值不会影响循环）
语法：FOR 循环变量 = 初始值|变量 TO 终止值|变量
（循环变量从初始值循环至终止值-1；循环开始后修改初始、终止变量不会影响循环）
循环控制：BREAK [层数]
（直接结束循环，层数>1可以一次结束多层循环）
循环控制：CONTINUE [层数]
（跳过剩余内容继续下一轮循环，层数>1可以跳出内层并继续外层循环）
示例：
$2 = 20
FOR $2                    # 循环20次
...
NEXT
FOR $1 = 5 TO $2    # 循环15次，$1分别取值5~19
...
NEXT

【条件分支】
语法：
IF 变量 比较运算符 变量|值
...
ELSE
...
ENDIF
（满足条件时执行第一个语句块，否则执行第二个语句块；可用的比较运算符有=、<、>、<=、>=、!=；ELSE和第二个语句块可以省略）
（注意，只有右侧可以用值，左侧必须用变量）
示例：
# 求1~100中的所有质数
FOR $1 = 2 TO 100    # 待测试数字
    FOR $2 = 2 TO $1    # 可能的约数
        $3 = $1
        $3 %= $2
        IF $3 = 0        # 找到一个约数，因此$1非质数，继续外层循环
            CONTINUE 2
        ENDIF
    NEXT
    PRINT $1
NEXT

【函数定义】
语法：
FUNC 函数名
...语句
RET
调用语法：
CALL 函数名

示例：
func loop ## 循环按A键3次
for 3
a
500
next
## 在需要的地方写如下语句使用函数
call loop

【算术运算】
加法：目标变量 += 变量|值
乘法：目标变量 *= 变量|值
整除：目标变量 /= 变量|值
求余：目标变量 %= 变量|值
取负：目标变量 = -变量
示例：
_孵蛋箱数 = 10
$6 = _孵蛋箱数
$6 *= 30    # 孵蛋个数
FOR $1 = 0 TO $6
$2 = $1
$2 /= 30     # 箱数，以0为第一箱
$3 = $1
$3 %= 30
$3 /= 6     # 行数，以0为第一行
$4 = $1
$4 %= 6     # 列数，以0为第一列
PRINT $2 & 箱 & $3 & 行 & $4 & 列
NEXT

【逻辑运算】
And：目标变量 &= 变量|值
Or：目标变量 |= 变量|值
Xor：目标变量 ^= 变量|值
左移：目标变量 <<= 值
右移：目标变量 >>= 值
取反：目标变量 = ~变量

【栈操作】
入栈：PUSH 变量
出栈：POP 变量
全部入栈：PUSHALL
全部出栈：POPALL
（不懂什么是栈可以不用管，用于储存和恢复变量值，以及传递参数；全部入栈/出栈暂时只支持联机模式）

【转化布尔】
语法：BOOL 变量
（值为零则得到0，非零则得到1）

【随机数】
语法：RAND 变量
（生成一个随机数，取值范围为0~变量值-1，结果存入该变量）

【搜图语法】
语法：@搜图标签
（@开头，搜索对应名称图标签所代表的图像）
示例：
    # 搜索5号路蛋屋主人对应的图片
    $2 = @5号路蛋屋主人
    # 判断匹配度是否大于95
    IF $2 > 95
        PRINT $2 & 找到了
    ENDIF

其他相关配置请查看搜图窗口中的帮助

<To Be Continued...>
